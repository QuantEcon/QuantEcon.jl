Julia port:
 ☐ Part 1: Programming in Python
   ☐ About Python
   ☐ Setting up Your Python Environment
   ☐ An Introductory Example
   ☐ Python Essentials
   ☐ Object Oriented Programming
   ☐ How it Works: Data, Variables and Names
   ☐ More Language Features
 ☐ Part 2: The Scientific Libraries
   ☐ NumPy
   ☐ SciPy
   ☐ Matplotlib
   ☐ Pandas
   ☐ IPython Shell and Notebook
      ☐ LucasTree code is really slow.
      ☐ I could not to the reshaping and stop relying on broadcasting. Explicit for loops would be more efficient
      ☐ The solutions notebook matches the python version, but I think we can do better. I think we can design more clever functions so that it is easy for people to call with different arguments

Julia (other):

 ☐ Add web references to top of files in examples/
 ☐ Create a macro that takes a function with just positional arguments and creates one with only kwargs
 ✔ Finish writing quad routines @done (14-12-03 16:36)

Julia solve_vf:
  ☐ lucastree has a non-standard structure. Too bad I won't have a solve_vf method for it...
     ☐ Ditto for asset_pricing...

Juila Tests:
   ☐ quadsum.jl
      ☐ Test m_quadratic_sum

Python:
   ☐ CompEcon
      ☐ Combine quadrature commits into single commit @maybe
      ☐ Unit tests for quadrature routines. Just use the demqua files, save the data, and match it in python.
      ☐ Root Finding:


＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
 ✔ quad.jl @done (14-08-28 12:34) @project(Julia (other))
 ✔  quad.jl @done (14-08-28 12:34) @project(Juila Tests)
 ✔  mc_tools.jl @done (14-08-28 12:34) @project(Juila Tests)
 ✔ quadrect @done (14-08-27 20:36) @project(Julia (other))
 ✔ qnwunif @done (14-08-27 20:36) @project(Julia (other))
 ✔ qnwtrap @done (14-08-27 20:36) @project(Julia (other))
 ✔ qnwsimp @done (14-08-27 20:36) @project(Julia (other))
 ✔ qnwgamma @done (14-08-27 20:36) @project(Julia (other))
 ✔ qnwbeta @done (14-08-27 20:36) @project(Julia (other))
 ✔ qnwlogn @done (14-08-27 20:33) @project(Julia (other))
 ✔ qnwnorm @done (14-08-27 17:33) @project(Julia (other))
 ✔ qnwlege @done (14-08-27 17:02) @project(Julia (other))
 ✔ qnwcheb @done (14-08-27 17:02) @project(Julia (other))
 ✔  optgrowth.jl @done (14-08-27 10:19) @project(Juila Tests)
 ✔  odu.jl @done (14-08-27 10:19) @project(Juila Tests)
 ✔  lucastree.jl @done (14-08-27 10:19) @project(Juila Tests)
 ✔  jv.jl @done (14-08-27 10:19) @project(Juila Tests)
 ✔  ifp.jl @done (14-08-27 10:19) @project(Juila Tests)
 ✔  career.jl @done (14-08-27 10:19) @project(Juila Tests)
 ✔  asset_pricing.jl @done (14-08-27 10:19) @project(Juila Tests)
 ✔ Part 4: Advanced Applications @done (14-08-26 01:35) @project(Julia port)
 ✔ Part 3: Introductory Applications @done (14-08-26 01:35) @project(Julia port)
 ✔ I use my meshgrid function a few places. maybe I should just write it once. @done (14-08-26 01:34) @project(Julia (other))
 ✔ Search with Offer Distribution Unknown @done (14-08-25 09:07) @project(Julia port)
 ✔ Robustness @done (14-08-25 09:07) @project(Julia port)
 ✔ Optimal Taxation @done (14-08-25 09:07) @project(Julia port)
 ✔ Optimal Savings @done (14-08-25 09:07) @project(Julia port)
 ✔ Linear Stochastic Models @done (14-08-25 09:07) @project(Julia port)
 ✔ Fix bellman_operator in odu.jl. It is just cycling and not updating properly. @done (14-08-25 09:07) @project(Julia port)
 ✔ Estimation of Spectra @done (14-08-25 09:07) @project(Julia port)
 ✔ On-the-Job Search @done (14-08-14 10:43) @project(Julia port)
 ✔ Do boxplot example shown in exercise 3 @done (14-08-13 13:46) @project(Julia port)
 ✔ See kde from KernelDensity.jl @done (14-08-11 14:10) @project(Julia port)
 ✔ LLN and CLT (for clt3d.py need to find gaussian_kde function in Julia) @done (14-08-11 14:10) @project(Julia port)
 ✔ Modeling Career Choice @done (14-08-05 02:13) @project(Julia port)
 ✔ Continuous State Markov Chains @done (14-08-05 00:31) @project(Julia port)
 ✔ A First Look at the Kalman Filter @done (14-07-29 01:46) @project(Julia port)
 ✔ Linear State Space Models @done (14-07-28 23:52) @project(Julia port)
 ✔ Linear Algebra @done (14-07-10 00:47) @project(Julia port)
 ✔ The Permanent Income Model @done (14-07-09 23:47) @project(Julia port)
 ✔ The Lucas Asset Pricing Model @done (14-07-05 17:03) @project(Julia port)
 ✔ Rational Expectations Equilibrium @done (14-07-05 17:03) @project(Julia port)
 ✔ Bisect @done (14-07-02 14:15) @project(Python)
 ✔ LQ Control Problems @done (14-07-01 23:27) @project(Julia port)
 ✔ Infinite Horizon Dynamic Programming @done (14-06-30 13:09) @project(Julia port)
 ✔ Finite Markov Chains @project(Julia port)
 ✔ Shortest Paths @project(Julia port)
 ✔ Schelling’s Segregation Model @project(Julia port)
 ✔ qnwequi @project(Julia (other))
